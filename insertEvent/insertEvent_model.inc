<?php
/**
 * =====================================================================================
	プログラム名  ：	勤怠管理システム（Web版）
 	プログラム説明：社員の勤怠情報を管理するシステムです。
 				管理者はカレンダーを使用して視覚的に勤怠の登録、削除、変更
 				を行えるほか各社員の勤怠情報の閲覧、休日、休憩時間の設定
 				機能を使用することができます。

 				勤怠情報とカレンダー部分はPDF,EXCEL出力することが可能です。
 	作成者        ：	水島創太
 	作成日        ：	2015/9/29
	=====================================================================================
 */

class insertEvent_model{

	//-----------------------------------------
	//各プロパティ変数宣言
	//-----------------------------------------

	private $eventName;	//セミナー名
	private $shortName;	//セミナー略名
	private $color;		//表示色管理用ID
	private $execute;	//処理種別

	/*====================================================================================
	 *概要：
	 *	insertUser_form
	 *機能説明：
	 *	コンストラクタ
	 *引数：
	 *	なし
	 *戻り値：
	 *	なし
	 *備考：
	 *	作成日)	2015/8/26
	 *	作成者)	水島創太
	 *	説明）
	 *	更新日)
	 *	更新者)
	 *	変更)
	  ====================================================================================
	 */

	function __construct(){

		$this->init();

	}

	/*====================================================================================
	 *概要：
	 *	init
	 *機能説明：
	 *	プロパティ初期化
	 *引数：
	 *	なし
	 *戻り値：
	 *	なし
	 *備考：
	 *	作成日)	2015/8/26
	 *	作成者)	水島創太
	 *	説明）
	 *	更新日)
	 *	更新者)
	 *	変更)
	  ====================================================================================
	 */

 	private function init(){

	$this->eventName = "";	//セミナー名
	$this->shortName = "";	//セミナー略名
	$this->color = "";		//表示色
	$this->execute = "";	//処理種別

	}

	/*====================================================================================
	 *概要：
	 *	setter関数
	 *機能説明：
	 *	値をフィールド変数に格納
	 *引数：
	 *	各種格納する値
	 *戻り値：
	 *	なし
	 *備考：
	 *	作成日)	2015/8/26
	 *	作成者)	水島創太
	 *	説明）
	 *	更新日)
	 *	更新者)
	 *	変更)
	  ====================================================================================
	 */

		//セミナー名
		public function setEventName($param)
		{
			$this->eventName = $param;
		}

		//セミナー略名
		public function setShortName($param)
		{
			$this->shortName = $param;
		}

		//表示色
		public function setColor($param)
		{
			$this->color = $param;
		}

		//処理種別
		public function setExecute($param)
		{
			$this->execute = $param;
		}

	/*====================================================================================
	 *概要：
	 *	getter関数
	 *機能説明：
	 *	値をフィールド変数から取得
	 *引数：
	 *	なし
	 *戻り値：
	 *	各種格納した値
	 *備考：
	 *	作成日)	2015/8/27
	 *	作成者)	水島創太
	 *	説明）
	 *	更新日)
	 *	更新者)
	 *	変更)
	  ====================================================================================
	 */

		//セミナー名
		public function getEventName()
		{
			return $this->eventName;
		}

		//セミナー略名
		public function getShortName()
		{
			return $this->shortName;
		}

		//表示色
		public function getColor()
		{
			return $this->color;
		}

		//処理種別
		public function getExecute()
		{
			return $this->execute;
		}

	/*====================================================================================
	 *概要：
	 *	getForm関数
	 *機能説明：
	 *	フォームに入力された値を受け取る
	 *引数：
	 *	フォーム入力された値
	 *戻り値：
	 *	なし
	 *備考：
	 *	作成日)	2015/8/27
	 *	作成者)	水島創太
	 *	説明）
	 *	更新日)
	 *	更新者)
	 *	変更)
	  ====================================================================================
	 */

		//フォーム入力からの数値受け取り関数
		public function getForm(){

			//ユーザー入力セミナー名
			if(isset($_POST["eventName"]))
			{
				$this->eventName = $_POST["eventName"];
			}

			//ユーザー入力セミナー略名
			if(isset($_POST["shortName"]))
			{
				$this->shortName = $_POST["shortName"];
			}

			//ユーザー入力表示色
			if(isset($_POST["color"]))
			{
				$this->color = $_POST["color"];
			}

			//処理種別
			if(isset($_POST["execute"]))
			{
				$this->execute = $_POST["execute"];
			}

		}

	/*====================================================================================
	 *概要：
	 *	processing
	 *機能説明：
	 *	全体の処理判定を行う
	 *引数：
	 *	なし
	 *戻り値：
	 *	なし
	 *備考：
	 *	作成日)	2015/8/27
	 *	作成者)	水島創太
	 *	説明）
	 *	更新日)
	 *	更新者)
	 *	変更)
	  ====================================================================================
	 */

		public function processing($db)
		{

			//画面遷移のチェック
			if($this->execute == "insert"){


				//エラーが無ければ登録処理を行う
				$this->insert($db);

			}else{	//初期画面&全件表示ボタン押下時

			}
		}

	/*====================================================================================
	 *概要：
	 *	insert
	 *機能説明：
	 *	各入力フォームに入力されたデータを登録する。
	 *引数：
	 *	データベース情報
	 *戻り値：
	 *	なし
	 *備考：
	 *	作成日)	2015/8/27
	 *	作成者)	水島創太
	 *	説明）
	 *	更新日)
	 *	更新者)
	 *	変更)
	  ====================================================================================
	 */

		private function insert($db){

			//MySQL文の生成
			$sql  = "INSERT INTO eventinfo VALUES
					(NULL,'{$this->eventName}','{$this->shortName}',
					'{$this->color}',NOW(),NOW())";


			//SQL文の発行
			$result = mysql_query($sql,$db);
		}
}
?>
